{"ast":null,"code":"import React from\"react\";import\"./Loader.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Loader(props){var setIsLoading=props.setIsLoading;setTimeout(function(){setIsLoading(false);},2000);return/*#__PURE__*/_jsxs(\"div\",{className:\"loaders\",children:[/*#__PURE__*/_jsx(\"img\",{alt:\"loading\",className:\"loadingImg\",src:\"/images/Loading.svg\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"lds-ripple\",children:[/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"div\",{})]})]});}export default Loader;// import { renderHook, act } from '@testing-library/react-hooks'\n// import useCounter from './Loader.js'\n// test('should increment counter', () => {\n//   const { result } = renderHook(() => setIsLoading(true))\n//   act(() => {\n//     result.current.\n//   })\n//   expect(result.current.count).toBe(1)\n// })","map":{"version":3,"sources":["C:/Users/pouÅ¾ivatel/skola/essproject/react-portfolio/src/components/Loader/Loader.js"],"names":["React","Loader","props","setIsLoading","setTimeout"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,cAAP,C,wFACA,QAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAAuB,CACtB,GAAQC,CAAAA,YAAR,CAAyBD,KAAzB,CAAQC,YAAR,CACAC,UAAU,CAAC,UAAM,CAChBD,YAAY,CAAC,KAAD,CAAZ,CACA,CAFS,CAEP,IAFO,CAAV,CAGA,mBACC,aAAK,SAAS,CAAC,SAAf,wBACC,YAAK,GAAG,CAAC,SAAT,CAAmB,SAAS,CAAC,YAA7B,CAA0C,GAAG,CAAC,qBAA9C,EADD,cAGC,aAAK,SAAS,CAAC,YAAf,wBACC,cADD,cAEC,cAFD,GAHD,GADD,CAUA,CAED,cAAeF,CAAAA,MAAf,CAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA","sourcesContent":["import React from \"react\";\nimport \"./Loader.css\";\nfunction Loader(props) {\n\tconst { setIsLoading } = props;\n\tsetTimeout(() => {\n\t\tsetIsLoading(false);\n\t}, 2000);\n\treturn (\n\t\t<div className=\"loaders\">\n\t\t\t<img alt=\"loading\" className=\"loadingImg\" src='/images/Loading.svg' />\n\n\t\t\t<div className=\"lds-ripple\">\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Loader;\n\n\n// import { renderHook, act } from '@testing-library/react-hooks'\n// import useCounter from './Loader.js'\n\n// test('should increment counter', () => {\n//   const { result } = renderHook(() => setIsLoading(true))\n\n//   act(() => {\n//     result.current.\n//   })\n\n//   expect(result.current.count).toBe(1)\n// })"]},"metadata":{},"sourceType":"module"}